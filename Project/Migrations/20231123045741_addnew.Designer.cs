// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project.Data;

#nullable disable

namespace Project.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231123045741_addnew")]
    partial class addnew
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.23")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Users", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens", (string)null);
                });

            modelBuilder.Entity("Project.Data.Applicant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fullname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Province")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ward")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Applicants");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Birthday = new DateTime(1990, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6273),
                            District = "City of Westminster",
                            Email = "user1@example.com",
                            Fullname = "James Smith",
                            Image = "image1.jpg",
                            Password = "Abc12345678",
                            Phone = "1234567890",
                            Province = "Greater London",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Ward = "Westminster"
                        },
                        new
                        {
                            Id = 2,
                            Birthday = new DateTime(1995, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6276),
                            District = "Manchester City",
                            Email = "user2@example.com",
                            Fullname = "Sarah Johnson",
                            Image = "image2.jpg",
                            Password = "Abc12345678",
                            Phone = "2345678901",
                            Province = "Greater Manchester",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Ward = "City Centre"
                        },
                        new
                        {
                            Id = 3,
                            Birthday = new DateTime(1985, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6279),
                            District = "Birmingham City Centre",
                            Email = "user3@example.com",
                            Fullname = "David Williams",
                            Image = "image3.jpg",
                            Password = "Abc12345678",
                            Phone = "3456789012",
                            Province = "West Midlands",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Ward = "Ladywood"
                        },
                        new
                        {
                            Id = 4,
                            Birthday = new DateTime(1980, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6283),
                            District = "Liverpool City Centre",
                            Email = "user4@example.com",
                            Fullname = "Emma Brown",
                            Image = "image4.jpg",
                            Password = "Abc12345678",
                            Phone = "4567890123",
                            Province = "Merseyside",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Ward = "Riverside"
                        },
                        new
                        {
                            Id = 5,
                            Birthday = new DateTime(1992, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6286),
                            District = "Leeds City Centre",
                            Email = "user5@example.com",
                            Fullname = "John Jones",
                            Image = "image5.jpg",
                            Password = "Abc12345678",
                            Phone = "5678901234",
                            Province = "West Yorkshire",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Ward = "City Centre"
                        },
                        new
                        {
                            Id = 6,
                            Birthday = new DateTime(1978, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6289),
                            District = "Bristol City Centre",
                            Email = "user6@example.com",
                            Fullname = "Lucy Taylor",
                            Image = "image6.jpg",
                            Password = "Abc12345678",
                            Phone = "6789012345",
                            Province = "Bristol",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Ward = "Central"
                        },
                        new
                        {
                            Id = 7,
                            Birthday = new DateTime(1988, 11, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6292),
                            District = "Sheffield City Centre",
                            Email = "user7@example.com",
                            Fullname = "Michael Davies",
                            Image = "image7.jpg",
                            Password = "Abc12345678",
                            Phone = "7890123456",
                            Province = "South Yorkshire",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Ward = "City Centre"
                        },
                        new
                        {
                            Id = 8,
                            Birthday = new DateTime(1998, 4, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6295),
                            District = "Newcastle City Centre",
                            Email = "user8@example.com",
                            Fullname = "Olivia Wilson",
                            Image = "image8.jpg",
                            Password = "Abc12345678",
                            Phone = "8901234567",
                            Province = "Tyne and Wear",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Ward = "Ouseburn"
                        },
                        new
                        {
                            Id = 9,
                            Birthday = new DateTime(1983, 7, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6298),
                            District = "Nottingham City Centre",
                            Email = "user9@example.com",
                            Fullname = "Thomas Evans",
                            Image = "image9.jpg",
                            Password = "Abc12345678",
                            Phone = "9012345678",
                            Province = "Nottinghamshire",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Ward = "Bridge"
                        });
                });

            modelBuilder.Entity("Project.Data.ApplicantVacancy", b =>
                {
                    b.Property<string>("ApplicantVacancy_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("Applicant_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("Hr_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("StatusApplicant_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Updated_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("Vacancy_Id")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ApplicantVacancy_Id");

                    b.HasIndex("Applicant_Id");

                    b.HasIndex("Hr_Id");

                    b.HasIndex("StatusApplicant_Id");

                    b.HasIndex("Vacancy_Id");

                    b.ToTable("ApplicantsDetail");

                    b.HasData(
                        new
                        {
                            ApplicantVacancy_Id = "A0001",
                            Applicant_Id = 1,
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6727),
                            StatusApplicant_Id = 1,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Vacancy_Id = "V0001"
                        },
                        new
                        {
                            ApplicantVacancy_Id = "A0002",
                            Applicant_Id = 2,
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6729),
                            StatusApplicant_Id = 1,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Vacancy_Id = "V0002"
                        },
                        new
                        {
                            ApplicantVacancy_Id = "A0003",
                            Applicant_Id = 3,
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6731),
                            StatusApplicant_Id = 1,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Vacancy_Id = "V0003"
                        },
                        new
                        {
                            ApplicantVacancy_Id = "A0004",
                            Applicant_Id = 4,
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6733),
                            StatusApplicant_Id = 1,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Vacancy_Id = "V0004"
                        },
                        new
                        {
                            ApplicantVacancy_Id = "A0005",
                            Applicant_Id = 5,
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6735),
                            StatusApplicant_Id = 1,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Vacancy_Id = "V0005"
                        },
                        new
                        {
                            ApplicantVacancy_Id = "A0006",
                            Applicant_Id = 6,
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6737),
                            StatusApplicant_Id = 1,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Vacancy_Id = "V0001"
                        },
                        new
                        {
                            ApplicantVacancy_Id = "A0007",
                            Applicant_Id = 7,
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6739),
                            StatusApplicant_Id = 1,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Vacancy_Id = "V0002"
                        },
                        new
                        {
                            ApplicantVacancy_Id = "A0008",
                            Applicant_Id = 8,
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6741),
                            StatusApplicant_Id = 1,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Vacancy_Id = "V0003"
                        },
                        new
                        {
                            ApplicantVacancy_Id = "A0009",
                            Applicant_Id = 9,
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6743),
                            StatusApplicant_Id = 1,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Vacancy_Id = "V0004"
                        });
                });

            modelBuilder.Entity("Project.Data.Department", b =>
                {
                    b.Property<string>("Department_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("Department_Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Department_Id = "D0001",
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6041),
                            Name = "IT",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Department_Id = "D0002",
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6050),
                            Name = "DS",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Department_Id = "D0003",
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6052),
                            Name = "MKT",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Project.Data.InterviewVacancy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ApplicantVacancy_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Interview_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatusInterview_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ApplicantVacancy_Id");

                    b.HasIndex("Interview_Id");

                    b.HasIndex("StatusInterview_Id");

                    b.ToTable("ApplicantsVacnacies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ApplicantVacancy_Id = "A0001",
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6767),
                            StatusInterview_Id = 1,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            ApplicantVacancy_Id = "A0002",
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6769),
                            StatusInterview_Id = 1,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            ApplicantVacancy_Id = "A0003",
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6770),
                            StatusInterview_Id = 1,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            ApplicantVacancy_Id = "A0004",
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6772),
                            StatusInterview_Id = 1,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            ApplicantVacancy_Id = "A0001",
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6774),
                            StatusInterview_Id = 1,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            ApplicantVacancy_Id = "A0002",
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6776),
                            StatusInterview_Id = 1,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            ApplicantVacancy_Id = "A0003",
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6777),
                            StatusInterview_Id = 1,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            ApplicantVacancy_Id = "A0004",
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6779),
                            StatusInterview_Id = 1,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            ApplicantVacancy_Id = "A0005",
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6781),
                            StatusInterview_Id = 1,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Project.Data.Job", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Department_Id");

                    b.ToTable("Jobs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6328),
                            Department_Id = "D0001",
                            Name = "C#",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6330),
                            Department_Id = "D0001",
                            Name = "Java",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6332),
                            Department_Id = "D0001",
                            Name = "PHP",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6334),
                            Department_Id = "D0002",
                            Name = "Adobe Creative Suite",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6336),
                            Department_Id = "D0002",
                            Name = "Sketch",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6338),
                            Department_Id = "D0002",
                            Name = "Figma",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6339),
                            Department_Id = "D0003",
                            Name = "Google Analytics",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6341),
                            Department_Id = "D0003",
                            Name = "SEO",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6343),
                            Department_Id = "D0003",
                            Name = "Google AdWords , Facebook Ads",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Project.Data.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Positions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6370),
                            Name = "Intern",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6371),
                            Name = "Fresher",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6373),
                            Name = "Junior",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6375),
                            Name = "Senior",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6376),
                            Name = "Leader",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Project.Data.StatusApplicant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("StatusApplicants");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6403),
                            Name = "Not Process",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6405),
                            Name = "In Process",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6406),
                            Name = "Hired",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6408),
                            Name = "Banned",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Project.Data.StatusInterview", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("StatusInterviews");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6457),
                            Name = "Processing",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6458),
                            Name = "Scheduled",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6460),
                            Name = "Selected",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6462),
                            Name = "Rejected",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Project.Data.StatusVacancy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("StatusVacancy");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6430),
                            Name = "Open",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6432),
                            Name = "Close",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6434),
                            Name = "Suspended",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Project.Data.Vacancy", b =>
                {
                    b.Property<string>("Vacancy_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Benefits")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Hr_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Place")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Position_Id")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Requirement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.Property<int>("StatusVacancy_Id")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("Vacancy_Id");

                    b.HasIndex("Hr_Id");

                    b.HasIndex("Position_Id");

                    b.HasIndex("StatusVacancy_Id");

                    b.ToTable("Vacancies");

                    b.HasData(
                        new
                        {
                            Vacancy_Id = "V0001",
                            Benefits = "Benefits",
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6493),
                            Description = "Description",
                            EndDate = new DateTime(2023, 12, 3, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6488),
                            Place = "America",
                            Position_Id = 1,
                            Quantity = 5,
                            Requirement = "Requirement",
                            Salary = 2000,
                            StatusVacancy_Id = 1,
                            Title = "Title",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Vacancy_Id = "V0002",
                            Benefits = "Benefits",
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6497),
                            Description = "Description",
                            EndDate = new DateTime(2023, 12, 3, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6496),
                            Place = "America",
                            Position_Id = 2,
                            Quantity = 4,
                            Requirement = "Requirement",
                            Salary = 7000,
                            StatusVacancy_Id = 1,
                            Title = "Title",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Vacancy_Id = "V0003",
                            Benefits = "Benefits",
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6501),
                            Description = "Description",
                            EndDate = new DateTime(2023, 12, 3, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6500),
                            Place = "America",
                            Position_Id = 3,
                            Quantity = 3,
                            Requirement = "Requirement",
                            Salary = 10000,
                            StatusVacancy_Id = 1,
                            Title = "Title",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Vacancy_Id = "V0004",
                            Benefits = "Benefits",
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6505),
                            Description = "Description",
                            EndDate = new DateTime(2023, 12, 3, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6503),
                            Place = "America",
                            Position_Id = 4,
                            Quantity = 2,
                            Requirement = "Requirement",
                            Salary = 13000,
                            StatusVacancy_Id = 1,
                            Title = "Title",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Vacancy_Id = "V0005",
                            Benefits = "Benefits",
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6508),
                            Description = "Description",
                            EndDate = new DateTime(2023, 12, 3, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6507),
                            Place = "America",
                            Position_Id = 5,
                            Quantity = 1,
                            Requirement = "Requirement",
                            Salary = 15000,
                            StatusVacancy_Id = 1,
                            Title = "Title",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Project.Data.VacancyJob", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Job_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Updated_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("Vacancy_Id")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Job_Id");

                    b.HasIndex("Vacancy_Id");

                    b.ToTable("VacanciesJobs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6532),
                            Job_Id = 1,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Vacancy_Id = "V0001"
                        },
                        new
                        {
                            Id = 2,
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6534),
                            Job_Id = 2,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Vacancy_Id = "V0001"
                        },
                        new
                        {
                            Id = 3,
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6535),
                            Job_Id = 3,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Vacancy_Id = "V0001"
                        },
                        new
                        {
                            Id = 4,
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6537),
                            Job_Id = 4,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Vacancy_Id = "V0002"
                        },
                        new
                        {
                            Id = 5,
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6539),
                            Job_Id = 5,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Vacancy_Id = "V0002"
                        },
                        new
                        {
                            Id = 6,
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6683),
                            Job_Id = 6,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Vacancy_Id = "V0002"
                        },
                        new
                        {
                            Id = 7,
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6686),
                            Job_Id = 7,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Vacancy_Id = "V0003"
                        },
                        new
                        {
                            Id = 8,
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6687),
                            Job_Id = 8,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Vacancy_Id = "V0003"
                        },
                        new
                        {
                            Id = 9,
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6689),
                            Job_Id = 9,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Vacancy_Id = "V0003"
                        },
                        new
                        {
                            Id = 10,
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6691),
                            Job_Id = 1,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Vacancy_Id = "V0004"
                        },
                        new
                        {
                            Id = 11,
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6693),
                            Job_Id = 2,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Vacancy_Id = "V0004"
                        },
                        new
                        {
                            Id = 12,
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6695),
                            Job_Id = 3,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Vacancy_Id = "V0004"
                        },
                        new
                        {
                            Id = 13,
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6697),
                            Job_Id = 4,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Vacancy_Id = "V0005"
                        },
                        new
                        {
                            Id = 14,
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6699),
                            Job_Id = 5,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Vacancy_Id = "V0005"
                        },
                        new
                        {
                            Id = 15,
                            Created_at = new DateTime(2023, 11, 23, 11, 57, 40, 701, DateTimeKind.Local).AddTicks(6700),
                            Job_Id = 6,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Vacancy_Id = "V0005"
                        });
                });

            modelBuilder.Entity("Project.Data.AppUser", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Employeecode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fullname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Province")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ward")
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("Department_Id");

                    b.HasDiscriminator().HasValue("AppUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Project.Data.ApplicantVacancy", b =>
                {
                    b.HasOne("Project.Data.Applicant", "Applicant")
                        .WithMany()
                        .HasForeignKey("Applicant_Id");

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "IdentityUser")
                        .WithMany()
                        .HasForeignKey("Hr_Id");

                    b.HasOne("Project.Data.StatusApplicant", "StatusApplicant")
                        .WithMany()
                        .HasForeignKey("StatusApplicant_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project.Data.Vacancy", "Vacancy")
                        .WithMany()
                        .HasForeignKey("Vacancy_Id");

                    b.Navigation("Applicant");

                    b.Navigation("IdentityUser");

                    b.Navigation("StatusApplicant");

                    b.Navigation("Vacancy");
                });

            modelBuilder.Entity("Project.Data.InterviewVacancy", b =>
                {
                    b.HasOne("Project.Data.ApplicantVacancy", "ApplicantVacancy")
                        .WithMany()
                        .HasForeignKey("ApplicantVacancy_Id");

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "IdentityUser")
                        .WithMany()
                        .HasForeignKey("Interview_Id");

                    b.HasOne("Project.Data.StatusInterview", "StatusInterview")
                        .WithMany()
                        .HasForeignKey("StatusInterview_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicantVacancy");

                    b.Navigation("IdentityUser");

                    b.Navigation("StatusInterview");
                });

            modelBuilder.Entity("Project.Data.Job", b =>
                {
                    b.HasOne("Project.Data.Department", "Department")
                        .WithMany()
                        .HasForeignKey("Department_Id");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Project.Data.Vacancy", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "IdentityUser")
                        .WithMany()
                        .HasForeignKey("Hr_Id");

                    b.HasOne("Project.Data.Position", "Position")
                        .WithMany()
                        .HasForeignKey("Position_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project.Data.StatusVacancy", "StatusVacancy")
                        .WithMany()
                        .HasForeignKey("StatusVacancy_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdentityUser");

                    b.Navigation("Position");

                    b.Navigation("StatusVacancy");
                });

            modelBuilder.Entity("Project.Data.VacancyJob", b =>
                {
                    b.HasOne("Project.Data.Job", "Job")
                        .WithMany()
                        .HasForeignKey("Job_Id");

                    b.HasOne("Project.Data.Vacancy", "Vacancy")
                        .WithMany()
                        .HasForeignKey("Vacancy_Id");

                    b.Navigation("Job");

                    b.Navigation("Vacancy");
                });

            modelBuilder.Entity("Project.Data.AppUser", b =>
                {
                    b.HasOne("Project.Data.Department", "Department")
                        .WithMany()
                        .HasForeignKey("Department_Id");

                    b.Navigation("Department");
                });
#pragma warning restore 612, 618
        }
    }
}
