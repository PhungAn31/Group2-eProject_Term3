// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project.Data;

#nullable disable

namespace Project.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231119145822_addnew")]
    partial class addnew
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.23")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Users", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens", (string)null);
                });

            modelBuilder.Entity("Project.Models.Applicant", b =>
                {
                    b.Property<string>("Applicant_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatusApplicant_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Updated_at")
                        .HasColumnType("datetime2");

                    b.Property<int?>("User_Id")
                        .HasColumnType("int");

                    b.HasKey("Applicant_Id");

                    b.HasIndex("StatusApplicant_Id");

                    b.HasIndex("User_Id");

                    b.ToTable("Applicants");

                    b.HasData(
                        new
                        {
                            Applicant_Id = "A0001",
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3403),
                            StatusApplicant_Id = 1,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            User_Id = 1
                        },
                        new
                        {
                            Applicant_Id = "A0002",
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3405),
                            StatusApplicant_Id = 1,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            User_Id = 2
                        },
                        new
                        {
                            Applicant_Id = "A0003",
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3408),
                            StatusApplicant_Id = 1,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            User_Id = 3
                        },
                        new
                        {
                            Applicant_Id = "A0004",
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3410),
                            StatusApplicant_Id = 1,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            User_Id = 4
                        },
                        new
                        {
                            Applicant_Id = "A0005",
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3412),
                            StatusApplicant_Id = 1,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            User_Id = 5
                        },
                        new
                        {
                            Applicant_Id = "A0006",
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3415),
                            StatusApplicant_Id = 1,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            User_Id = 6
                        },
                        new
                        {
                            Applicant_Id = "A0007",
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3418),
                            StatusApplicant_Id = 1,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            User_Id = 7
                        },
                        new
                        {
                            Applicant_Id = "A0008",
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3420),
                            StatusApplicant_Id = 1,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            User_Id = 8
                        },
                        new
                        {
                            Applicant_Id = "A0009",
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3422),
                            StatusApplicant_Id = 1,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            User_Id = 9
                        });
                });

            modelBuilder.Entity("Project.Models.ApplicantVacnacy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Applicant_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("Employee_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatusInterview_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Updated_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("Vacancy_Id")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Applicant_Id");

                    b.HasIndex("Employee_Id");

                    b.HasIndex("StatusInterview_Id");

                    b.HasIndex("Vacancy_Id");

                    b.ToTable("ApplicantsVacnacies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Applicant_Id = "A0001",
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3456),
                            StatusInterview_Id = 1,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Vacancy_Id = "V0001"
                        },
                        new
                        {
                            Id = 2,
                            Applicant_Id = "A0002",
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3458),
                            StatusInterview_Id = 1,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Vacancy_Id = "V0001"
                        },
                        new
                        {
                            Id = 3,
                            Applicant_Id = "A0003",
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3460),
                            StatusInterview_Id = 1,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Vacancy_Id = "V0001"
                        },
                        new
                        {
                            Id = 4,
                            Applicant_Id = "A0004",
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3462),
                            StatusInterview_Id = 1,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Vacancy_Id = "V0001"
                        },
                        new
                        {
                            Id = 5,
                            Applicant_Id = "A0001",
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3464),
                            StatusInterview_Id = 1,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Vacancy_Id = "V0002"
                        },
                        new
                        {
                            Id = 6,
                            Applicant_Id = "A0002",
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3569),
                            StatusInterview_Id = 1,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Vacancy_Id = "V0002"
                        },
                        new
                        {
                            Id = 7,
                            Applicant_Id = "A0003",
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3573),
                            StatusInterview_Id = 1,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Vacancy_Id = "V0002"
                        },
                        new
                        {
                            Id = 8,
                            Applicant_Id = "A0004",
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3575),
                            StatusInterview_Id = 1,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Vacancy_Id = "V0002"
                        },
                        new
                        {
                            Id = 9,
                            Applicant_Id = "A0005",
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3578),
                            StatusInterview_Id = 1,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Vacancy_Id = "V0003"
                        },
                        new
                        {
                            Id = 10,
                            Applicant_Id = "A0004",
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3581),
                            StatusInterview_Id = 1,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Vacancy_Id = "V0003"
                        },
                        new
                        {
                            Id = 11,
                            Applicant_Id = "A0003",
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3583),
                            StatusInterview_Id = 1,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Vacancy_Id = "V0003"
                        },
                        new
                        {
                            Id = 12,
                            Applicant_Id = "A0002",
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3586),
                            StatusInterview_Id = 1,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Vacancy_Id = "V0004"
                        },
                        new
                        {
                            Id = 13,
                            Applicant_Id = "A0001",
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3588),
                            StatusInterview_Id = 1,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Vacancy_Id = "V0004"
                        },
                        new
                        {
                            Id = 14,
                            Applicant_Id = "A0005",
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3591),
                            StatusInterview_Id = 1,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Vacancy_Id = "V0004"
                        },
                        new
                        {
                            Id = 15,
                            Applicant_Id = "A0001",
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3594),
                            StatusInterview_Id = 1,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Vacancy_Id = "V0005"
                        },
                        new
                        {
                            Id = 16,
                            Applicant_Id = "A0002",
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3597),
                            StatusInterview_Id = 1,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Vacancy_Id = "V0005"
                        },
                        new
                        {
                            Id = 17,
                            Applicant_Id = "A0003",
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3599),
                            StatusInterview_Id = 1,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Vacancy_Id = "V0005"
                        },
                        new
                        {
                            Id = 18,
                            Applicant_Id = "A0005",
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3602),
                            StatusInterview_Id = 1,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Vacancy_Id = "V0005"
                        });
                });

            modelBuilder.Entity("Project.Models.Department", b =>
                {
                    b.Property<string>("Department_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("Department_Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Department_Id = "D0001",
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(2657),
                            Name = "IT",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Department_Id = "D0002",
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(2669),
                            Name = "DS",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Department_Id = "D0003",
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(2671),
                            Name = "MKT",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Project.Models.Job", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Department_Id");

                    b.ToTable("Jobs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3049),
                            Department_Id = "D0001",
                            Name = "C#",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3052),
                            Department_Id = "D0001",
                            Name = "Java",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3054),
                            Department_Id = "D0001",
                            Name = "PHP",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3056),
                            Department_Id = "D0002",
                            Name = "Adobe Creative Suite",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3058),
                            Department_Id = "D0002",
                            Name = "Sketch",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3061),
                            Department_Id = "D0002",
                            Name = "Figma",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3063),
                            Department_Id = "D0003",
                            Name = "Google Analytics",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3065),
                            Department_Id = "D0003",
                            Name = "SEO",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3068),
                            Department_Id = "D0003",
                            Name = "Google AdWords , Facebook Ads",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Project.Models.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Positions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3111),
                            Name = "Intern",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3113),
                            Name = "Fresher",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3115),
                            Name = "Junior",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3118),
                            Name = "Senior",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3120),
                            Name = "Leader",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Project.Models.StatusApplicant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("StatusApplicants");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3151),
                            Name = "Not Process",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3154),
                            Name = "In Process",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3156),
                            Name = "Hired",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3158),
                            Name = "Banned",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Project.Models.StatusInterview", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("StatusInterviews");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3218),
                            Name = "Processing",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3220),
                            Name = "Scheduled",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3223),
                            Name = "Selected",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3225),
                            Name = "Rejected",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Project.Models.StatusVacancy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("StatusVacancy");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3189),
                            Name = "Open",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3191),
                            Name = "Close",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3193),
                            Name = "Suspended",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Project.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fullname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Province")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ward")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UsersClient");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Birthday = new DateTime(1990, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(2914),
                            District = "City of Westminster",
                            Email = "user1@example.com",
                            Fullname = "James Smith",
                            Image = "image1.jpg",
                            Password = "Abc12345678",
                            Phone = "1234567890",
                            Province = "Greater London",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Ward = "Westminster"
                        },
                        new
                        {
                            Id = 2,
                            Birthday = new DateTime(1995, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(2919),
                            District = "Manchester City",
                            Email = "user2@example.com",
                            Fullname = "Sarah Johnson",
                            Image = "image2.jpg",
                            Password = "Abc12345678",
                            Phone = "2345678901",
                            Province = "Greater Manchester",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Ward = "City Centre"
                        },
                        new
                        {
                            Id = 3,
                            Birthday = new DateTime(1985, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(2923),
                            District = "Birmingham City Centre",
                            Email = "user3@example.com",
                            Fullname = "David Williams",
                            Image = "image3.jpg",
                            Password = "Abc12345678",
                            Phone = "3456789012",
                            Province = "West Midlands",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Ward = "Ladywood"
                        },
                        new
                        {
                            Id = 4,
                            Birthday = new DateTime(1980, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(2928),
                            District = "Liverpool City Centre",
                            Email = "user4@example.com",
                            Fullname = "Emma Brown",
                            Image = "image4.jpg",
                            Password = "Abc12345678",
                            Phone = "4567890123",
                            Province = "Merseyside",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Ward = "Riverside"
                        },
                        new
                        {
                            Id = 5,
                            Birthday = new DateTime(1992, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(2932),
                            District = "Leeds City Centre",
                            Email = "user5@example.com",
                            Fullname = "John Jones",
                            Image = "image5.jpg",
                            Password = "Abc12345678",
                            Phone = "5678901234",
                            Province = "West Yorkshire",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Ward = "City Centre"
                        },
                        new
                        {
                            Id = 6,
                            Birthday = new DateTime(1978, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(2936),
                            District = "Bristol City Centre",
                            Email = "user6@example.com",
                            Fullname = "Lucy Taylor",
                            Image = "image6.jpg",
                            Password = "Abc12345678",
                            Phone = "6789012345",
                            Province = "Bristol",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Ward = "Central"
                        },
                        new
                        {
                            Id = 7,
                            Birthday = new DateTime(1988, 11, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(2942),
                            District = "Sheffield City Centre",
                            Email = "user7@example.com",
                            Fullname = "Michael Davies",
                            Image = "image7.jpg",
                            Password = "Abc12345678",
                            Phone = "7890123456",
                            Province = "South Yorkshire",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Ward = "City Centre"
                        },
                        new
                        {
                            Id = 8,
                            Birthday = new DateTime(1998, 4, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(2946),
                            District = "Newcastle City Centre",
                            Email = "user8@example.com",
                            Fullname = "Olivia Wilson",
                            Image = "image8.jpg",
                            Password = "Abc12345678",
                            Phone = "8901234567",
                            Province = "Tyne and Wear",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Ward = "Ouseburn"
                        },
                        new
                        {
                            Id = 9,
                            Birthday = new DateTime(1983, 7, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(2950),
                            District = "Nottingham City Centre",
                            Email = "user9@example.com",
                            Fullname = "Thomas Evans",
                            Image = "image9.jpg",
                            Password = "Abc12345678",
                            Phone = "9012345678",
                            Province = "Nottinghamshire",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Ward = "Bridge"
                        });
                });

            modelBuilder.Entity("Project.Models.Vacancy", b =>
                {
                    b.Property<string>("Vacancy_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Benefits")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Employee_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Place")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Position_Id")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Requirement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.Property<int>("StatusVacancy_Id")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("Vacancy_Id");

                    b.HasIndex("Employee_Id");

                    b.HasIndex("Position_Id");

                    b.HasIndex("StatusVacancy_Id");

                    b.ToTable("Vacancies");

                    b.HasData(
                        new
                        {
                            Vacancy_Id = "V0001",
                            Benefits = "Benefits",
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3269),
                            Description = "Description",
                            EndDate = new DateTime(2023, 11, 29, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3262),
                            Place = "America",
                            Position_Id = 1,
                            Quantity = 5,
                            Requirement = "Requirement",
                            Salary = 2000,
                            StatusVacancy_Id = 1,
                            Title = "Title",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Vacancy_Id = "V0002",
                            Benefits = "Benefits",
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3276),
                            Description = "Description",
                            EndDate = new DateTime(2023, 11, 29, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3274),
                            Place = "America",
                            Position_Id = 2,
                            Quantity = 4,
                            Requirement = "Requirement",
                            Salary = 7000,
                            StatusVacancy_Id = 1,
                            Title = "Title",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Vacancy_Id = "V0003",
                            Benefits = "Benefits",
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3281),
                            Description = "Description",
                            EndDate = new DateTime(2023, 11, 29, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3279),
                            Place = "America",
                            Position_Id = 3,
                            Quantity = 3,
                            Requirement = "Requirement",
                            Salary = 10000,
                            StatusVacancy_Id = 1,
                            Title = "Title",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Vacancy_Id = "V0004",
                            Benefits = "Benefits",
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3286),
                            Description = "Description",
                            EndDate = new DateTime(2023, 11, 29, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3284),
                            Place = "America",
                            Position_Id = 4,
                            Quantity = 2,
                            Requirement = "Requirement",
                            Salary = 13000,
                            StatusVacancy_Id = 1,
                            Title = "Title",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Vacancy_Id = "V0005",
                            Benefits = "Benefits",
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3291),
                            Description = "Description",
                            EndDate = new DateTime(2023, 11, 29, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3290),
                            Place = "America",
                            Position_Id = 5,
                            Quantity = 1,
                            Requirement = "Requirement",
                            Salary = 15000,
                            StatusVacancy_Id = 1,
                            Title = "Title",
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Project.Models.VacancyJob", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Job_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Updated_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("Vacancy_Id")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Job_Id");

                    b.HasIndex("Vacancy_Id");

                    b.ToTable("VacanciesJobs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3327),
                            Job_Id = 1,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Vacancy_Id = "V0001"
                        },
                        new
                        {
                            Id = 2,
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3330),
                            Job_Id = 2,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Vacancy_Id = "V0001"
                        },
                        new
                        {
                            Id = 3,
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3333),
                            Job_Id = 3,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Vacancy_Id = "V0001"
                        },
                        new
                        {
                            Id = 4,
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3336),
                            Job_Id = 4,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Vacancy_Id = "V0002"
                        },
                        new
                        {
                            Id = 5,
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3340),
                            Job_Id = 5,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Vacancy_Id = "V0002"
                        },
                        new
                        {
                            Id = 6,
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3342),
                            Job_Id = 6,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Vacancy_Id = "V0002"
                        },
                        new
                        {
                            Id = 7,
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3345),
                            Job_Id = 7,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Vacancy_Id = "V0003"
                        },
                        new
                        {
                            Id = 8,
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3347),
                            Job_Id = 8,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Vacancy_Id = "V0003"
                        },
                        new
                        {
                            Id = 9,
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3350),
                            Job_Id = 9,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Vacancy_Id = "V0003"
                        },
                        new
                        {
                            Id = 10,
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3352),
                            Job_Id = 1,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Vacancy_Id = "V0004"
                        },
                        new
                        {
                            Id = 11,
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3354),
                            Job_Id = 2,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Vacancy_Id = "V0004"
                        },
                        new
                        {
                            Id = 12,
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3356),
                            Job_Id = 3,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Vacancy_Id = "V0004"
                        },
                        new
                        {
                            Id = 13,
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3359),
                            Job_Id = 4,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Vacancy_Id = "V0005"
                        },
                        new
                        {
                            Id = 14,
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3361),
                            Job_Id = 5,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Vacancy_Id = "V0005"
                        },
                        new
                        {
                            Id = 15,
                            Created_at = new DateTime(2023, 11, 19, 21, 58, 21, 733, DateTimeKind.Local).AddTicks(3364),
                            Job_Id = 6,
                            Updated_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Vacancy_Id = "V0005"
                        });
                });

            modelBuilder.Entity("Project.Models.AppUser", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Employeecode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fullname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Province")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ward")
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("Department_Id");

                    b.HasDiscriminator().HasValue("AppUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Project.Models.Applicant", b =>
                {
                    b.HasOne("Project.Models.StatusApplicant", "StatusApplicant")
                        .WithMany()
                        .HasForeignKey("StatusApplicant_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("User_Id");

                    b.Navigation("StatusApplicant");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Project.Models.ApplicantVacnacy", b =>
                {
                    b.HasOne("Project.Models.Applicant", "Applicant")
                        .WithMany()
                        .HasForeignKey("Applicant_Id");

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "IdentityUser")
                        .WithMany()
                        .HasForeignKey("Employee_Id");

                    b.HasOne("Project.Models.StatusInterview", "StatusInterview")
                        .WithMany()
                        .HasForeignKey("StatusInterview_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project.Models.Vacancy", "Vacancy")
                        .WithMany()
                        .HasForeignKey("Vacancy_Id");

                    b.Navigation("Applicant");

                    b.Navigation("IdentityUser");

                    b.Navigation("StatusInterview");

                    b.Navigation("Vacancy");
                });

            modelBuilder.Entity("Project.Models.Job", b =>
                {
                    b.HasOne("Project.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("Department_Id");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Project.Models.Vacancy", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "IdentityUser")
                        .WithMany()
                        .HasForeignKey("Employee_Id");

                    b.HasOne("Project.Models.Position", "Position")
                        .WithMany()
                        .HasForeignKey("Position_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project.Models.StatusVacancy", "StatusVacancy")
                        .WithMany()
                        .HasForeignKey("StatusVacancy_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdentityUser");

                    b.Navigation("Position");

                    b.Navigation("StatusVacancy");
                });

            modelBuilder.Entity("Project.Models.VacancyJob", b =>
                {
                    b.HasOne("Project.Models.Job", "Job")
                        .WithMany()
                        .HasForeignKey("Job_Id");

                    b.HasOne("Project.Models.Vacancy", "Vacancy")
                        .WithMany()
                        .HasForeignKey("Vacancy_Id");

                    b.Navigation("Job");

                    b.Navigation("Vacancy");
                });

            modelBuilder.Entity("Project.Models.AppUser", b =>
                {
                    b.HasOne("Project.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("Department_Id");

                    b.Navigation("Department");
                });
#pragma warning restore 612, 618
        }
    }
}
